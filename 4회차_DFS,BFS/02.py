# 모의고사

# 문제 설명

# 수포자는 수학을 포기한 사람의 준말입니다. 수포자 삼인방은 모의고사에 수학 문제를 전부 찍으려 합니다. 
# 수포자는 1번 문제부터 마지막 문제까지 다음과 같이 찍습니다.
# 1번 수포자가 찍는 방식: 1, 2, 3, 4, 5, 1, 2, 3, 4, 5, ...
# 2번 수포자가 찍는 방식: 2, 1, 2, 3, 2, 4, 2, 5, 2, 1, 2, 3, 2, 4, 2, 5, ...
# 3번 수포자가 찍는 방식: 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, 3, 3, 1, 1, 2, 2, 4, 4, 5, 5, ...
# 1번 문제부터 마지막 문제까지의 정답이 순서대로 들은 배열 answers가 주어졌을 때, 가장 많은 문제를 맞힌 사람이 누구인지 배열에 담아 return 하도록 solution 함수를 작성해주세요.

# 제한 조건
# 시험은 최대 10,000 문제로 구성되어있습니다.
# 문제의 정답은 1, 2, 3, 4, 5중 하나입니다.
# 가장 높은 점수를 받은 사람이 여럿일 경우, return하는 값을 오름차순 정렬해주세요.


def solution(answers):
    number1 = [1,2,3,4,5]            # 1번 수포자
    number2 = [2,1,2,3,2,4,2,5]      # 2번 수포자
    number3 = [3,3,1,1,2,2,4,4,5,5]  # 3번 수포자
    score = [0, 0, 0]                # 수포자 1,2,3의 점수를 담은 배열
    result = []

    for idx, answer in enumerate(answers):        # 정답이 담긴 배열 answers를 반복
        if answer == number1[idx%len(number1)]:   # 현재 문제의 정답과 1번 수포자가 찍은 답이 일치한다면
            score[0] += 1                         # 1번 수포자의 점수에 1을 더한다.
        if answer == number2[idx%len(number2)]:   # 현재 문제의 정답과 2번 수포자가 찍은 답이 일치한다면
            score[1] += 1                         # 2번 수포자의 점수에 1을 더한다.
        if answer == number3[idx%len(number3)]:   # 현재 문제의 정답과 3번 수포자가 찍은 답이 일치한다면
            score[2] += 1                         # 3번 수포자의 점수에 1을 더한다.

    for idx, s in enumerate(score):               # 점수가 담긴 배열 score안에서 반복
        if s == max(score):                       # 현재 수포자의 점수와 가장 높은 점수가 같으면
            result.append(idx+1)

    return result